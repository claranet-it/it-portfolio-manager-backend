version: 0.2

env:
  shell: bash

phases:
  install:
    runtime-versions:
      nodejs: 18.x
      java: corretto17
    commands:
      - apt-get install -y docker
      - echo "Installing dependencies..."
      - npm ci --ignore-scripts
      - echo "Installing DynamoDB local..."
      - npm run dynamodb:install
      - echo "Generating prisma client..."
      - npx prisma generate
  pre_build:
    commands:
      - echo "Running linter..."
      - npm run lint
      - echo "Starting DB..."
      - docker run -d -p 3307:3306 -e MARIADB_ROOT_PASSWORD=root -e MARIADB_USER=brickly -e MARIADB_PASSWORD=brickly -e MARIADB_DATABASE=brickly-test mariadb:10.11.8
      - sleep 5
      - docker ps
      - echo "Starting DynamoDB..."
      - npm run dynamodb:start:test
      - sleep 60
      - echo "Checking if DynamoDB is running..."
      - if ss -tuln | grep ':8000'; then echo 'DynamoDB is running on port 8000'; elif ss -tuln | grep ':8002'; then echo 'DynamoDB is running on port 8002'; else echo 'DynamoDB is not running on expected ports'; exit 1; fi
  build:
    commands:
      - echo "TEST DB CONNECTION"
      - echo "Setting up test db..."
      - npx dotenv -e .env.test -- prisma migrate dev
      - echo "Running tests..."
      - npm run test:ci
      - echo "Deploying to AWS - Stage $STAGE_NAME..."
      - npx serverless deploy --stage $STAGE_NAME
      - echo "Creating .env.build..."
      - npm --silent run build:env --buildStage=$STAGE_NAME > .env.build
      - cat .env.build
      - echo "Executing migrations..."
      - npx dotenv -e .env.build -- prisma migrate deploy
  post_build:
    commands:
      - echo "Build completed on `date`"
