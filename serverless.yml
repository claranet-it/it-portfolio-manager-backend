service: it-portfolio-manager-backend
frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-south-1
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:DescribeTable"
            - "dynamodb:Query"
            - "dynamodb:Scan"
            - "dynamodb:GetItem"
            - "dynamodb:PutItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
          Resource:
            - "Fn::GetAtt": [ ItPortfolioManagerSkillMatrix, Arn ]
            - "Fn::Join": [ '/', [ "Fn::GetAtt": [ ItPortfolioManagerSkillMatrix, Arn ], 'index', 'companyIndex' ] ]
            - "Fn::GetAtt": [ ItPortfolioManagerUserProfile, Arn ]
            - "Fn::GetAtt": [ ItPortfolioManagerEffort, Arn ]
  stackTags:
    Owner: 'Massimo Biagioli'
    Destroy: 'false'

plugins:
  - serverless-plugin-typescript
  - serverless-tscpaths
  - serverless-dynamodb
  - serverless-offline

custom:
  serverless-dynamodb:
    stages:
      - dev
      - test
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
    seed:
      test:
        sources:
          - table: ItPortfolioManager-SkillMatrix-${opt:stage, 'dev'}
            sources: [ ./seed/skill-matrix.json ]
          - table: ItPortfolioManager-UserProfile-${opt:stage, 'dev'}
            sources: [ ./seed/user-profile.json ]
          - table: ItPortfolioManager-Effort-${opt:stage, 'dev'}
            sources: [ ./seed/effort.json ]

package:
  patterns:
    - node_modules/**
    - .serverless/**

functions:
  app:
    handler: src/handlers/app.handler
    environment:
      STAGE_NAME: ${opt:stage, 'dev'}
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{any+}
          method: ANY

resources:
  Resources:
    ItPortfolioManagerSkillMatrix:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "ItPortfolioManager-SkillMatrix-${opt:stage, 'dev'}"
        AttributeDefinitions:
          - AttributeName: uid
            AttributeType: S
          - AttributeName: skill
            AttributeType: S
          - AttributeName: company
            AttributeType: S
        KeySchema:
          - AttributeName: uid
            KeyType: HASH
          - AttributeName: skill
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: companyIndex
            KeySchema:
              - AttributeName: company
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
    ItPortfolioManagerUserProfile:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "ItPortfolioManager-UserProfile-${opt:stage, 'dev'}"
        AttributeDefinitions:
          - AttributeName: uid
            AttributeType: S
        KeySchema:
          - AttributeName: uid
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    ItPortfolioManagerEffort:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "ItPortfolioManager-Effort-${opt:stage, 'dev'}"
        AttributeDefinitions:
          - AttributeName: uid
            AttributeType: S
          - AttributeName: month_year
            AttributeType: S
        KeySchema:
          - AttributeName: uid
            KeyType: HASH
          - AttributeName: month_year
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1