service: it-portfolio-manager-backend
frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-south-1
  timeout: 60
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:DescribeTable"
            - "dynamodb:Query"
            - "dynamodb:Scan"
            - "dynamodb:GetItem"
            - "dynamodb:PutItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:BatchWriteItem"
          Resource:
            - "Fn::GetAtt": [ ItPortfolioManagerSkillMatrix, Arn ]
            - "Fn::Join": [ '/', [ "Fn::GetAtt": [ ItPortfolioManagerSkillMatrix, Arn ], 'index', 'companyIndex' ] ]
            - "Fn::GetAtt": [ ItPortfolioManagerUserProfile, Arn ]
            - "Fn::Join": [ '/', [ "Fn::GetAtt": [ ItPortfolioManagerUserProfile, Arn ], 'index', 'companyIndex' ] ]
            - "Fn::GetAtt": [ ItPortfolioManagerEffort, Arn ]
            - "Fn::Join": [ '/', [ "Fn::GetAtt": [ ItPortfolioManagerEffort, Arn ], 'index', 'companyIndex' ] ]
            - "Fn::GetAtt": [ ItPortfolioManagerTasks, Arn ]
            - "Fn::GetAtt": [ ItPortfolioManagerTimeEntry, Arn ]
            - "Fn::Join": [ '/', [ "Fn::GetAtt": [ ItPortfolioManagerTimeEntry, Arn ], 'index', 'companyIndex' ] ]
            - "Fn::GetAtt": [ ItPortfolioManagerCrews, Arn ]
            - "Fn::GetAtt": [ ItPortfolioManagerTaskProperties, Arn ]
        - Effect: "Allow"
          Action:
            - "ssm:GetParameter"
          Resource:
            - arn:aws:ssm:${self:provider.region}:*:parameter/it-portfolio-manager/${opt:stage, 'dev'}/*
        - Effect: "Allow"
          Action:
            - s3:GetObject
            - s3:ListBucket
          Resource:
            - arn:aws:s3:::755827290206-prod-brickly-background-images
            - arn:aws:s3:::755827290206-prod-brickly-background-images/*
            - arn:aws:s3:::encryption-data-bucket
            - arn:aws:s3:::encryption-data-bucket/*
        - Effect: "Allow"
          Action:
            - kms:Decrypt
          Resource:
            - arn:aws:kms:${self:provider.region}:755827290206:key/3ffc4341-f95c-43cf-aeba-da53557f0d4b
        - Effect: "Allow"
          Action:
            - "ses:SendEmail"
          Resource: "*"
  stackTags:
    Owner: 'Massimo Biagioli'
    Destroy: 'false'

plugins:
  - serverless-plugin-typescript
  - serverless-tscpaths
  - serverless-dynamodb
  - serverless-offline
  - serverless-domain-manager

custom:
  customDomain:
    domainName: ${self:custom.variables.cdm.${opt:stage, 'dev'}}
    basePath: ''
    stage: ${opt:stage, 'dev'}
    createRoute53Record: false
    endpointType: 'REGIONAL'
    certificateArn: ${self:custom.variables.certificateArn.${opt:stage, 'dev'}}
  vpc:
    dev:
      subnetIds:
        - subnet-0dd2ae0510c3168cd
        - subnet-003b9c2bd22cf8de4
      securityGroupIds:
        - sg-0f70cb05c44cdae65
    test:
      subnetIds:
        - subnet-0dd2ae0510c3168cd
        - subnet-003b9c2bd22cf8de4
      securityGroupIds:
        - sg-0f70cb05c44cdae65
    stage:
      subnetIds:
        - subnet-0dd2ae0510c3168cd
        - subnet-003b9c2bd22cf8de4
      securityGroupIds:
        - sg-0f70cb05c44cdae65
    prod:
      subnetIds:
        - subnet-00e9390b3de78c81a
        - subnet-00d78be45329823a6
      securityGroupIds:
        - sg-05b4669bc61b06099
  variables:
    certificateArn:
      dev: 'localhost:3000'
      test: 'localhost:3000'
      stage: arn:aws:acm:${self:provider.region}:755827290206:certificate/d0c7c2a1-e136-48b3-b269-1354a876b1f2
      prod: arn:aws:acm:${self:provider.region}:755827290206:certificate/4a4b2cef-a3b9-4ee0-b0b3-3d67dc3989db
    cdm:
      dev: ''
      test: ''
      stage: 'api-stg.brickly.me'
      prod: 'api-prod.brickly.me'
    stages:
      - dev
      - prod
      - test
      - stage
    googleClientId:
      dev: ${env:GOOGLE_CLIENT_ID, ''}
      test: ${env:GOOGLE_CLIENT_ID, ''}
      stage: /it-portfolio-manager/${opt:stage, 'dev'}/google-client-id
      prod: /it-portfolio-manager/${opt:stage, 'dev'}/google-client-id
    googleClientSecret:
      dev: ${env:GOOGLE_CLIENT_SECRET, ''}
      test: ${env:GOOGLE_CLIENT_SECRET, ''}
      stage: /it-portfolio-manager/${opt:stage, 'dev'}/google-client-secret
      prod:  /it-portfolio-manager/${opt:stage, 'dev'}/google-client-secret
    msalClientId:
      dev: ${env:MSAL_CLIENT_ID, ''}
      test: ${env:MSAL_CLIENT_ID, ''}
      stage: /it-portfolio-manager/${opt:stage, 'dev'}/msal-client-id
      prod: /it-portfolio-manager/${opt:stage, 'dev'}/msal-client-id
    msalClientSecret:
      dev: ${env:MSAL_CLIENT_SECRET, ''}
      test: ${env:MSAL_CLIENT_SECRET, ''}
      stage: /it-portfolio-manager/${opt:stage, 'dev'}/msal-client-secret
      prod: /it-portfolio-manager/${opt:stage, 'dev'}/msal-client-secret
    msalCloudInstance:
      dev: ${env:MSAL_CLOUD_INSTANCE, ''}
      test: ${env:MSAL_CLOUD_INSTANCE, ''}
      stage: /it-portfolio-manager/${opt:stage, 'dev'}/msal-cloud-instance
      prod: /it-portfolio-manager/${opt:stage, 'dev'}/msal-cloud-instance
    msalTenantId:
      dev: ${env:MSAL_TENANT_ID, ''}
      test: ${env:MSAL_TENANT_ID, ''}
      stage: /it-portfolio-manager/${opt:stage, 'dev'}/msal-tenant-id
      prod: /it-portfolio-manager/${opt:stage, 'dev'}/msal-tenant-id

    apiBaseUrl:
      dev: http://localhost:3000
      test: http://localhost:3000
      stage: 'https://api-stg.brickly.me'
      prod: 'https://api-prod.brickly.me'

  serverless-dynamodb:
    stages:
      - dev
      - test
    start:
      port: 8002
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
    seed:
      test:
        sources:
          - table: ItPortfolioManager-SkillMatrix-${opt:stage, 'dev'}
            sources: [ ./seed/skill-matrix.json ]
          - table: ItPortfolioManager-UserProfile-${opt:stage, 'dev'}
            sources: [ ./seed/user-profile.json ]
          - table: ItPortfolioManager-Effort-${opt:stage, 'dev'}
            sources: [ ./seed/effort.json ]
          - table: ItPortfolioManager-Task-${opt:stage, 'dev'}
            rawsources: [ ./seed/task.json ]
          - table: ItPortfolioManager-TaskProperties-${opt:stage, 'dev'}
            rawsources: [ ./seed/task-properties.json ]
          - table: "ItPortfolioManager-TimeEntry-${opt:stage, 'dev'}"
            rawsources: [ ./seed/time-entry.json ]
          - table: "ItPortfolioManager-Crew-${opt:stage, 'dev'}"
            sources: ['./seed/crew.json']


package:
  patterns:
    - node_modules/**
    - .serverless/**
    - prisma/generated/**
    - basic_model.conf
    - basic_policy.csv

functions:
  app:
    handler: src/handlers/app.handler
    vpc: ${self:custom.vpc.${opt:stage, 'dev'}}
    environment:
      STAGE_NAME: ${opt:stage, 'dev'}
      OPENAI_API_KEY_ARN: /it-portfolio-manager/${opt:stage, 'dev'}/openai-api-key
      BRICKLY_API_KEY_ARN: /it-portfolio-manager/${opt:stage, 'dev'}/brickly-api-key
      GOOGLE_CLIENT_ID_ARN: ${self:custom.variables.googleClientId.${opt:stage, 'dev'}}
      GOOGLE_CLIENT_SECRET_ARN: ${self:custom.variables.googleClientSecret.${opt:stage, 'dev'}}
      GOOGLE_CALLBACK_URL: ${self:custom.variables.apiBaseUrl.${opt:stage, 'dev'}}/${opt:stage, 'dev'}/api/auth/google/oauthCallback
      MSAL_CLIENT_ID_ARN: ${self:custom.variables.msalClientId.${opt:stage, 'dev'}}
      MSAL_CLIENT_SECRET_ARN: ${self:custom.variables.msalClientSecret.${opt:stage, 'dev'}}
      MSAL_CLOUD_INSTANCE_ARN: ${self:custom.variables.msalCloudInstance.${opt:stage, 'dev'}}
      MSAL_TENANT_ID_ARN: ${self:custom.variables.msalTenantId.${opt:stage, 'dev'}}
      MSAL_CALLBACK_URL: ${self:custom.variables.apiBaseUrl.${opt:stage, 'dev'}}/${opt:stage, 'dev'}/api/auth/microsoft/msalCallback
      JWT_PRIVATE_KEY_ARN: /it-portfolio-manager/${opt:stage, 'dev'}/jwt-private-key
      JWT_PUBLIC_KEY_ARN: /it-portfolio-manager/${opt:stage, 'dev'}/jwt-public-key
      DATABASE_URL: ${ssm:/it-portfolio-manager/${opt:stage, 'dev'}/database-url}
      BACKGROUND_TEMPLATES_BUCKET: ${ssm:/it-portfolio-manager/${opt:stage, 'stage'}/background-templates-bucket, ''}
      RECEIVER_EMAIL: ${ssm:/it-portfolio-manager/${opt:stage, 'dev'}/unsubscribe-email/receiver, ''}
      SENDER_EMAIL: ${ssm:/it-portfolio-manager/${opt:stage, 'dev'}/unsubscribe-email/sender, ''}
      FIND_TEAM_OPENAI_PROMPT: "  Given the SKILL data:

      [[SKILL]]
      
      and EFFORT 
      
      [[EFFORT]]

      mont_year refers to the month and year, expressed in the format MM_yy
      if effort for one of the requested months is not present, consider avaiableEffort = 100%
      avaiableEffort refers to the effort definitely available, possible avaiable effort refers to the effort potentially available
      try to answer this question: [[QUESTION]]
      Filter only the results that satisfy the effort condition
      Sort the results first by skill score in descending order, then by effort in descending order
      Provide the answer without generating code."

      FIND_SKILLS_OPENAI_PROMPT: '       Your task is to extract the required skills from the sentence by selecting them from SKILLS, respond only with output_format
          sentence: [[QUESTION]]

          SKILLS:
            [[SKILL_LIST]]

          output_format: {"skills":[...]}" '

      FIND_PERIOD_OPENAI_PROMPT: '
        Your task is to find the time period described in the following sentence, respond only in the output_format format:

        sentence: [[QUESTION]]

        if year is not specified consider [[CURRENT_YEAR]]

        output_format: {"start": mm_yy "month_number": ...}"'

    events:
      - http:
          path: /
          method: ANY
          cors: true
      - http:
          path: /{any+}
          method: ANY
          cors: true

  removeResignedPeople:
    handler: src/handlers/removeResignedPeople.handler
    vpc: ${self:custom.vpc.${opt:stage, 'dev'}}
    events:
      - schedule: cron(0 4 * * ? *)
    environment:
      STAGE_NAME: ${opt:stage, 'dev'}
      SLACK_TOKEN_ARN: /it-portfolio-manager/${opt:stage, 'dev'}/slack-token

  encryptDataOfClaranet:
    handler: src/handlers/encryptDataOfClaranet.handler
    vpc: ${self:custom.vpc.${opt:stage, 'dev'}}
    timeout: 900
    memorySize: 2048
    environment:
      STAGE_NAME: ${opt:stage, 'dev'}
      OPENAI_API_KEY_ARN: /it-portfolio-manager/${opt:stage, 'dev'}/openai-api-key
      BRICKLY_API_KEY_ARN: /it-portfolio-manager/${opt:stage, 'dev'}/brickly-api-key
      GOOGLE_CLIENT_ID_ARN: ${self:custom.variables.googleClientId.${opt:stage, 'dev'}}
      GOOGLE_CLIENT_SECRET_ARN: ${self:custom.variables.googleClientSecret.${opt:stage, 'dev'}}
      GOOGLE_CALLBACK_URL: ${self:custom.variables.apiBaseUrl.${opt:stage, 'dev'}}/${opt:stage, 'dev'}/api/auth/google/oauthCallback
      MSAL_CLIENT_ID_ARN: ${self:custom.variables.msalClientId.${opt:stage, 'dev'}}
      MSAL_CLIENT_SECRET_ARN: ${self:custom.variables.msalClientSecret.${opt:stage, 'dev'}}
      MSAL_CLOUD_INSTANCE_ARN: ${self:custom.variables.msalCloudInstance.${opt:stage, 'dev'}}
      MSAL_TENANT_ID_ARN: ${self:custom.variables.msalTenantId.${opt:stage, 'dev'}}
      MSAL_CALLBACK_URL: ${self:custom.variables.apiBaseUrl.${opt:stage, 'dev'}}/${opt:stage, 'dev'}/api/auth/microsoft/msalCallback
      JWT_PRIVATE_KEY_ARN: /it-portfolio-manager/${opt:stage, 'dev'}/jwt-private-key
      JWT_PUBLIC_KEY_ARN: /it-portfolio-manager/${opt:stage, 'dev'}/jwt-public-key
      DATABASE_URL: ${ssm:/it-portfolio-manager/${opt:stage, 'dev'}/database-url}
      BACKGROUND_TEMPLATES_BUCKET: ${ssm:/it-portfolio-manager/${opt:stage, 'stage'}/background-templates-bucket, ''}
      FIND_TEAM_OPENAI_PROMPT: "  Given the SKILL data:

      [[SKILL]]

      and EFFORT 

      [[EFFORT]]

      mont_year refers to the month and year, expressed in the format MM_yy
      if effort for one of the requested months is not present, consider avaiableEffort = 100%
      avaiableEffort refers to the effort definitely available, possible avaiable effort refers to the effort potentially available
      try to answer this question: [[QUESTION]]
      Filter only the results that satisfy the effort condition
      Sort the results first by skill score in descending order, then by effort in descending order
      Provide the answer without generating code."

      FIND_SKILLS_OPENAI_PROMPT: '       Your task is to extract the required skills from the sentence by selecting them from SKILLS, respond only with output_format
          sentence: [[QUESTION]]

          SKILLS:
            [[SKILL_LIST]]

          output_format: {"skills":[...]}" '

      FIND_PERIOD_OPENAI_PROMPT: '
        Your task is to find the time period described in the following sentence, respond only in the output_format format:

        sentence: [[QUESTION]]

        if year is not specified consider [[CURRENT_YEAR]]

        output_format: {"start": mm_yy "month_number": ...}"'

  mondayProjectReportMailer:
    handler: src/handlers/mondayProjectReportMailer.handler
    vpc: ${self:custom.vpc.${opt:stage, 'dev'}}
    timeout: 900
    environment:
      STAGE_NAME: ${opt:stage, 'dev'}
      DATABASE_URL: ${ssm:/it-portfolio-manager/${opt:stage, 'dev'}/database-url}
    events:
      - schedule: cron(0 9 ? * MON *)

resources:
  Resources:
    ItPortfolioManagerSkillMatrix:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "ItPortfolioManager-SkillMatrix-${opt:stage, 'dev'}"
        AttributeDefinitions:
          - AttributeName: uid
            AttributeType: S
          - AttributeName: skill
            AttributeType: S
          - AttributeName: company
            AttributeType: S
        KeySchema:
          - AttributeName: uid
            KeyType: HASH
          - AttributeName: skill
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: companyIndex
            KeySchema:
              - AttributeName: company
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
    ItPortfolioManagerUserProfile:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "ItPortfolioManager-UserProfile-${opt:stage, 'dev'}"
        AttributeDefinitions:
          - AttributeName: uid
            AttributeType: S
          - AttributeName: company
            AttributeType: S
        KeySchema:
          - AttributeName: uid
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: companyIndex
            KeySchema:
              - AttributeName: company
                KeyType: HASH
            Projection:
              ProjectionType: ALL
    ItPortfolioManagerEffort:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "ItPortfolioManager-Effort-${opt:stage, 'dev'}"
        AttributeDefinitions:
          - AttributeName: uid
            AttributeType: S
          - AttributeName: month_year
            AttributeType: S
          - AttributeName: company
            AttributeType: S
        KeySchema:
          - AttributeName: uid
            KeyType: HASH
          - AttributeName: month_year
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: companyIndex
            KeySchema:
              - AttributeName: company
                KeyType: HASH
              - AttributeName: month_year
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
    ItPortfolioManagerTasks:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "ItPortfolioManager-Task-${opt:stage, 'dev'}"
        AttributeDefinitions:
          - AttributeName: customerProject
            AttributeType: S
          - AttributeName: company
            AttributeType: S
        KeySchema:
          - AttributeName: company
            KeyType: HASH
          - AttributeName: customerProject
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    ItPortfolioManagerTimeEntry:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "ItPortfolioManager-TimeEntry-${opt:stage, 'dev'}"
        AttributeDefinitions:
          - AttributeName: uid
            AttributeType: S
          - AttributeName: timeEntryDate
            AttributeType: S
          - AttributeName: company
            AttributeType: S
        KeySchema:
          - AttributeName: uid
            KeyType: HASH
          - AttributeName: timeEntryDate
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: companyIndex
            KeySchema:
              - AttributeName: company
                KeyType: HASH
              - AttributeName: timeEntryDate
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
    ItPortfolioManagerCrews:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "ItPortfolioManager-Crew-${opt:stage, 'dev'}"
        AttributeDefinitions:
          - AttributeName: company
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: company
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    ItPortfolioManagerTaskProperties:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "ItPortfolioManager-TaskProperties-${opt:stage, 'dev'}"
        AttributeDefinitions:
          - AttributeName: projectId
            AttributeType: S
          - AttributeName: task
            AttributeType: S
        KeySchema:
          - AttributeName: projectId
            KeyType: HASH
          - AttributeName: task
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
